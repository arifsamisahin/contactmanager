{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/About.js","components/layout/Header.js","components/test/Test.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/NotFound.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","phone","email","className","style","cursor","userSelect","onClick","index_es","float","icon","faSortUp","faSortDown","size","react_router_dom","to","faEdit","bind","faTrash","PureComponent","Contacts","Fragment","contacts_Contact","About","Header","title","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","faHome","faPlus","faQuestion","defaultProps","Test","body","fetch","then","response","json","_this$state","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onInputChanged","defineProperty","target","onSubmit","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","NotFound","EditContact","updContact","match","params","put","library","add","faStroopwafel","App","context_Provider","layout_Header","marginTop","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0341c7f0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faSortDown,\r\n  faSortUp,\r\n  faTrash,\r\n  faEdit\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Contact extends PureComponent {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onShowClick = e => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, phone, email } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-2\">\r\n              <h4\r\n                style={{ cursor: 'pointer', userSelect: 'none' }}\r\n                onClick={this.onShowClick}\r\n              >\r\n                {name}\r\n                <FontAwesomeIcon\r\n                  style={{ float: 'right' }}\r\n                  icon={showContactInfo ? faSortUp : faSortDown}\r\n                  size=\"lg\"\r\n                />\r\n              </h4>\r\n\r\n              {showContactInfo ? (\r\n                <div>\r\n                  <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Email: {email}</li>\r\n                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                  </ul>\r\n                  <div className=\"text-right mt-1\">\r\n                    <Link to={`contact/edit/${id}`}>\r\n                      <button className=\"btn btn-sm btn-primary\">\r\n                        <FontAwesomeIcon icon={faEdit} /> Edit\r\n                      </button>\r\n                    </Link>\r\n\r\n                    <button\r\n                      className=\"btn btn-sm btn-danger ml-1\"\r\n                      onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} /> Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-5 mb-\">\r\n                Contact <span className=\"text-secondary\">List</span>\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact</h1>\r\n      <p className=\"lead\">Simple app to manage</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faHome, faQuestion } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Header = props => {\r\n  const { title } = props;\r\n  return (\r\n    <nav className=\"navbar fixed-top navbar-expand-md navbar-dark bg-dark mb-3\">\r\n      <a href=\"/\" className=\"navbar-brand\">\r\n        {title}\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\">\r\n        <div className=\"navbar-nav\">\r\n          <Link to=\"/\" className=\"nav-item nav-link\">\r\n            <FontAwesomeIcon icon={faHome} /> Home\r\n          </Link>\r\n          <Link to=\"/contact/add\" className=\"nav-item nav-link\">\r\n            <FontAwesomeIcon icon={faPlus} /> Add\r\n          </Link>\r\n          <Link to=\"/about\" className=\"nav-item nav-link\">\r\n            <FontAwesomeIcon icon={faQuestion} /> About\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: 'Header Title'\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  };\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    errors: {}\r\n  };\r\n\r\n  onInputChanged = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n    this.setState({ name: '', email: '', phone: '', errors: {} });\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { name, phone, email, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onInputChanged}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"phone\"\r\n                    label=\"Phone Number\"\r\n                    placeholder=\"Enter phone...\"\r\n                    value={phone}\r\n                    onChange={this.onInputChanged}\r\n                    error={errors.phone}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email...\"\r\n                    value={email}\r\n                    onChange={this.onInputChanged}\r\n                    error={errors.email}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block btn-success\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that pages doesn't exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      phone: contact.phone,\r\n      email: contact.email\r\n    });\r\n  }\r\n\r\n  onInputChanged = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    this.setState({ name: '', email: '', phone: '', errors: {} });\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { name, phone, email, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onInputChanged}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"phone\"\r\n                    label=\"Phone Number\"\r\n                    placeholder=\"Enter phone...\"\r\n                    value={phone}\r\n                    onChange={this.onInputChanged}\r\n                    error={errors.phone}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email...\"\r\n                    value={email}\r\n                    onChange={this.onInputChanged}\r\n                    error={errors.email}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-block btn-success\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport About from './components/pages/About';\nimport Header from './components/layout/Header';\nimport Test from './components/test/Test';\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons';\nimport AddContact from './components/contacts/AddContact';\nimport NotFound from './components/pages/NotFound';\nimport EditContact from './components/contacts/EditContact';\n\nlibrary.add(faStroopwafel);\n\nconst App = () => {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header title=\"Contact Manager\" />\n          <div className=\"container\" style={{ marginTop: '4.5rem' }}>\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport '@fortawesome/fontawesome-free';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}